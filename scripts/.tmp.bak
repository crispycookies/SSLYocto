

			hdc1000_0: Sensors@0x100004480 {
				compatible = "sch,hdc1000-1.0";
				reg = <0x00000001 0x00004480 0x00000040>;
				clocks = <&clk_0>;
			}; //end Sensors@0x100004480 (hdc1000_0)

			apd9301_0: Sensors@0x100004440 {
				compatible = "sch,apd9301-1.0";
				reg = <0x00000001 0x00004440 0x00000040>;
				clocks = <&clk_0>;
			}; //end Sensors@0x100004440 (apd9301_0)

			mpu9250_0: Sensors@0x100004400 {
				compatible = "sch,mpu9250-1.0";
				reg = <0x00000001 0x00004400 0x00000040>,
					<0x00000001 0x00000000 0x00004000>;
				reg-names = "avalon_slave_0", "dram";
				interrupt-parent = <&hps_0_arm_gic_0>;
				interrupts = <0 40 4>;
				clocks = <&clk_0>;
			}; //end Sensors@0x100004400 (mpu9250_0)

			hmi_leds: gpio@0x1000044d0 {
				compatible = "altr,pio-18.1", "altr,pio-1.0";
				reg = <0x00000001 0x000044d0 0x00000010>;
				clocks = <&clk_0>;
				altr,gpio-bank-width = <10>;	/* embeddedsw.dts.params.altr,gpio-bank-width type NUMBER */
				resetvalue = <1023>;	/* embeddedsw.dts.params.resetvalue type NUMBER */
				#gpio-cells = <2>;
				gpio-controller;
			}; //end gpio@0x1000044d0 (hmi_leds)

			hmi_seven_segment: display@0x100004000 {
				compatible = "hof,sevensegment-1.0";
				reg = <0x00000001 0x00004000 0x00000400>;
				clocks = <&clk_0>;
			}; //end display@0x100004000 (hmi_seven_segment)

			hmi_switches: gpio@0x1000044c0 {
				compatible = "altr,pio-18.1", "altr,pio-1.0";
				reg = <0x00000001 0x000044c0 0x00000010>;
				clocks = <&clk_0>;
				altr,gpio-bank-width = <10>;	/* embeddedsw.dts.params.altr,gpio-bank-width type NUMBER */
				resetvalue = <0>;	/* embeddedsw.dts.params.resetvalue type NUMBER */
				#gpio-cells = <2>;
				gpio-controller;
			}; //end gpio@0x1000044c0 (hmi_switches)
		
